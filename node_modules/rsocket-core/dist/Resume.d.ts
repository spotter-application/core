import { ExtFrame } from ".";
import { CancelFrame, ErrorFrame, MetadataPushFrame, PayloadFrame, RequestChannelFrame, RequestFnfFrame, RequestNFrame, RequestResponseFrame, RequestStreamFrame } from "./Frames";
export declare class FrameStore {
    private readonly storedFrames;
    private _lastReceivedFramePosition;
    private _firstAvailableFramePosition;
    private _lastSentFramePosition;
    get lastReceivedFramePosition(): number;
    get firstAvailableFramePosition(): number;
    get lastSentFramePosition(): number;
    store(frame: CancelFrame | ErrorFrame | PayloadFrame | MetadataPushFrame | RequestChannelFrame | RequestFnfFrame | RequestNFrame | RequestResponseFrame | RequestStreamFrame | ExtFrame): void;
    record(frame: CancelFrame | ErrorFrame | PayloadFrame | MetadataPushFrame | RequestChannelFrame | RequestFnfFrame | RequestNFrame | RequestResponseFrame | RequestStreamFrame | ExtFrame): void;
    dropTo(lastReceivedPosition: number): void;
    drain(consumer: (frame: CancelFrame | ErrorFrame | PayloadFrame | MetadataPushFrame | RequestChannelFrame | RequestFnfFrame | RequestNFrame | RequestResponseFrame | RequestStreamFrame | ExtFrame) => void): void;
}
