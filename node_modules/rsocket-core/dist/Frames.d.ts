/// <reference types="node" />
export declare enum FrameTypes {
    RESERVED = 0,
    SETUP = 1,
    LEASE = 2,
    KEEPALIVE = 3,
    REQUEST_RESPONSE = 4,
    REQUEST_FNF = 5,
    REQUEST_STREAM = 6,
    REQUEST_CHANNEL = 7,
    REQUEST_N = 8,
    CANCEL = 9,
    PAYLOAD = 10,
    ERROR = 11,
    METADATA_PUSH = 12,
    RESUME = 13,
    RESUME_OK = 14,
    EXT = 63
}
export declare enum Flags {
    NONE = 0,
    COMPLETE = 64,
    FOLLOWS = 128,
    IGNORE = 512,
    LEASE = 64,
    METADATA = 256,
    NEXT = 32,
    RESPOND = 128,
    RESUME_ENABLE = 128
}
export declare namespace Flags {
    function hasMetadata(flags: number): boolean;
    function hasComplete(flags: number): boolean;
    function hasNext(flags: number): boolean;
    function hasFollows(flags: number): boolean;
    function hasIgnore(flags: number): boolean;
    function hasRespond(flags: number): boolean;
    function hasLease(flags: number): boolean;
    function hasResume(flags: number): boolean;
}
export declare enum Lengths {
    FRAME = 3,
    HEADER = 6,
    METADATA = 3,
    REQUEST = 3
}
export declare namespace Frame {
    function isConnection(frame: Frame): frame is SetupFrame | ResumeFrame | ResumeOkFrame | LeaseFrame | KeepAliveFrame | ErrorFrame | MetadataPushFrame | UnsupportedFrame;
    function isRequest(frame: Frame): frame is RequestFnfFrame | RequestResponseFrame | RequestStreamFrame | RequestChannelFrame;
}
export declare type Frame = CancelFrame | ErrorFrame | KeepAliveFrame | LeaseFrame | PayloadFrame | MetadataPushFrame | RequestChannelFrame | RequestFnfFrame | RequestNFrame | RequestResponseFrame | RequestStreamFrame | ResumeFrame | ResumeOkFrame | SetupFrame | ExtFrame | UnsupportedFrame;
export declare type FrameWithPayload = {
    data: Buffer | null | undefined;
    metadata: Buffer | null | undefined;
};
export declare type CancelFrame = {
    type: FrameTypes.CANCEL;
    flags: number;
    streamId: number;
};
export declare type ErrorFrame = {
    type: FrameTypes.ERROR;
    flags: number;
    code: number;
    message: string;
    streamId: number;
};
export declare type KeepAliveFrame = {
    type: FrameTypes.KEEPALIVE;
    flags: number;
    data: Buffer | null | undefined;
    lastReceivedPosition: number;
    streamId: 0;
};
export declare type LeaseFrame = {
    type: FrameTypes.LEASE;
    flags: number;
    ttl: number;
    requestCount: number;
    metadata: Buffer | null | undefined;
    streamId: 0;
};
export declare type PayloadFrame = {
    type: FrameTypes.PAYLOAD;
    flags: number;
    data: Buffer | null | undefined;
    metadata: Buffer | null | undefined;
    streamId: number;
};
export declare type MetadataPushFrame = {
    type: FrameTypes.METADATA_PUSH;
    metadata: Buffer | null | undefined;
    flags: number;
    streamId: 0;
};
export declare type RequestChannelFrame = {
    type: FrameTypes.REQUEST_CHANNEL;
    data: Buffer | null | undefined;
    metadata: Buffer | null | undefined;
    flags: number;
    requestN: number;
    streamId: number;
};
export declare type RequestFnfFrame = {
    type: FrameTypes.REQUEST_FNF;
    data: Buffer | null | undefined;
    metadata: Buffer | null | undefined;
    flags: number;
    streamId: number;
};
export declare type RequestNFrame = {
    type: FrameTypes.REQUEST_N;
    flags: number;
    requestN: number;
    streamId: number;
};
export declare type RequestResponseFrame = {
    type: FrameTypes.REQUEST_RESPONSE;
    data: Buffer | null | undefined;
    metadata: Buffer | null | undefined;
    flags: number;
    streamId: number;
};
export declare type RequestStreamFrame = {
    type: FrameTypes.REQUEST_STREAM;
    data: Buffer | null | undefined;
    metadata: Buffer | null | undefined;
    flags: number;
    requestN: number;
    streamId: number;
};
export declare type ResumeFrame = {
    type: FrameTypes.RESUME;
    clientPosition: number;
    flags: number;
    majorVersion: number;
    minorVersion: number;
    resumeToken: Buffer;
    serverPosition: number;
    streamId: 0;
};
export declare type ResumeOkFrame = {
    type: FrameTypes.RESUME_OK;
    clientPosition: number;
    flags: number;
    streamId: 0;
};
export declare type SetupFrame = {
    type: FrameTypes.SETUP;
    dataMimeType: string;
    data: Buffer | null | undefined;
    flags: number;
    keepAlive: number;
    lifetime: number;
    metadata: Buffer | null | undefined;
    metadataMimeType: string;
    resumeToken: Buffer | null | undefined;
    streamId: 0;
    majorVersion: number;
    minorVersion: number;
};
export declare type ExtFrame = {
    type: FrameTypes.EXT;
    flags: number;
    streamId: number;
    extendedType: number;
    extendedContent?: Buffer;
};
export declare type UnsupportedFrame = {
    type: FrameTypes.RESERVED;
    streamId: 0;
    flags: number;
};
