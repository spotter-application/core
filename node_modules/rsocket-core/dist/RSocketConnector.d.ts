/// <reference types="node" />
import { Payload, RSocket } from "./RSocket";
import { ClientTransport } from "./Transport";
export declare type ConnectorConfig = {
    setup?: {
        payload?: Payload;
        dataMimeType?: string;
        metadataMimeType?: string;
        keepAlive?: number;
        lifetime?: number;
    };
    fragmentation?: {
        maxOutboundFragmentSize?: number;
    };
    transport: ClientTransport;
    responder?: Partial<RSocket>;
    lease?: {
        maxPendingRequests?: number;
    };
    resume?: {
        cacheSize?: number;
        tokenGenerator: () => Buffer;
        reconnectFunction: (attempt: number) => Promise<void>;
    };
};
export declare class RSocketConnector {
    private readonly config;
    constructor(config: ConnectorConfig);
    connect(): Promise<RSocket>;
}
