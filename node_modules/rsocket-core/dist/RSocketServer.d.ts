import { Closeable } from "./Common";
import { SocketAcceptor } from "./RSocket";
import { ServerTransport } from "./Transport";
export declare type ServerConfig = {
    transport: ServerTransport;
    acceptor: SocketAcceptor;
    serverSideKeepAlive?: boolean;
    fragmentation?: {
        maxOutboundFragmentSize?: number;
    };
    lease?: {
        maxPendingRequests?: number;
    };
    resume?: {
        casheSize?: number;
        sessionTimeout: number;
    };
};
export declare class RSocketServer {
    private readonly transport;
    private readonly acceptor;
    private readonly serverSideKeepAlive;
    private readonly lease?;
    private readonly fragmentation?;
    private readonly sessionStore?;
    private readonly sessionTimeout?;
    constructor(config: ServerConfig);
    bind(): Promise<Closeable>;
}
